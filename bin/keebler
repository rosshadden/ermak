#!/usr/bin/env nu

source keymap.nu

def main [] {
	let data = open data/keebler.nuon

	let layers = $data
	| get layers
	| each {|layer|
		let keycodes = get keys
		| compact
		| each {|key|
			into string
			| main transform $in
		}

		$layer | upsert keycodes $keycodes
	}

	$data
	| upsert layers $layers
	| to json
}

# Transform a key string into a QMK keysym.
def "main transform" [
	key: string # key alias to map
] {
	let parts = $key | parse "{fn}[{args}]" | get -i 0

	if $key in $keymap {
		$keymap | get $key
	} else if ($parts | is-not-empty) {
    $"(main transform $parts.fn)\((main transform $parts.args))"
	} else {
		$key
	}
}

def "main build" [] {
}
