{
	keyboard: sofle_pico
	keymap: ermak
	layout: LAYOUT
	layers: []
	layer_map: {
		ermak: [
			KC_LEFT_BRACKET KC_1 KC_2 KC_3 KC_4 KC_5 KC_6 KC_7 KC_8 KC_9 KC_0 KC_RIGHT_BRACKET
			KC_HASH KC_B KC_Y KC_O KC_U KC_QUOTE KC_DOUBLE_QUOTE KC_L KC_D KC_W KC_V KC_Z
			LCTL_T[KC_ESC] LGUI_T[KC_C] LALT_T[KC_I] LCTL_T[KC_E] LSFT_T[KC_A] KC_COMMA KC_DOT RSFT_T[KC_H] RCTL_T[KC_T] RALT_T[KC_S] RGUI_T[KC_N] KC_Q
			KC_LSFT KC_G KC_X KC_J KC_K KC_MINUS KC_MUTE KC_DVORAK KC_SLASH KC_R KC_M KC_F KC_P KC_RSFT
			KC_GRAVE KC_LALT KC_LGUI KC_BACKSPACE LT[_LOWER, KC_TAB] LT[_RAISE, KC_ENTER] KC_SPACE KC_RGUI KC_RALT KC_QUESTION
		]
		dvorak: [
			KC_GRV KC_1 KC_2 KC_3 KC_4 KC_5 KC_6 KC_7 KC_8 KC_9 KC_0 KC_BACKSLASH
			KC_EQUAL KC_QUOTE KC_COMMA KC_DOT KC_P KC_Y KC_F KC_G KC_C KC_R KC_L KC_SLASH
			KC_TRNS LGUI_T[KC_A] LALT_T[KC_O] LCTL_T[KC_E] LSFT_T[KC_U] KC_I KC_D RSFT_T[KC_H] RCTL_T[KC_T] RALT_T[KC_N] RGUI_T[KC_S] KC_MINUS
			KC_TRNS KC_SEMICOLON KC_Q KC_J KC_K KC_X KC_TRNS KC_ERMAK KC_B KC_M KC_W KC_V KC_Z KC_RSFT
			KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS
		]
		qwerty: [
			KC_GRV KC_1 KC_2 KC_3 KC_4 KC_5 KC_6 KC_7 KC_8 KC_9 KC_0 KC_BACKSLASH
			KC_EQUAL KC_Q KC_W KC_E KC_R KC_T KC_Y KC_U KC_I KC_O KC_P KC_MINUS
			KC_TRNS LGUI_T[KC_A] LALT_T[KC_S] LCTL_T[KC_D] LSFT_T[KC_F] KC_G KC_H RSFT_T[KC_J] RCTL_T[KC_K] RALT_T[KC_L] RGUI_T[KC_SCLN] KC_QUOT
			KC_TRNS KC_Z KC_X KC_C KC_V KC_B KC_TRNS KC_ERMAK KC_N KC_M KC_COMM KC_DOT KC_SLSH KC_RSFT
			KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS
		]
		lower: [
			QK_BOOT KC_F1 KC_F2 KC_F3 KC_F4 KC_F5 KC_F6 KC_F7 KC_F8 KC_F9 KC_F10 KC_F11
			QK_CLEAR_EEPROM KC_EXLM KC_AT KC_LCBR KC_RCBR KC_PIPE DT_PRNT KC_7 KC_8 KC_9 KC_ASTR KC_F12
			KC_TRNS KC_HASH KC_DLR KC_LPRN KC_RPRN KC_GRV DT_UP KC_4 KC_5 KC_6 KC_PPLS KC_NO
			KC_TRNS KC_LEFT_ANGLE_BRACKET KC_LEFT_ANGLE_BRACKET KC_LBRC KC_RBRC KC_TILD KC_TRNS KC_TRNS DT_DOWN KC_1 KC_2 KC_3 KC_PSLS KC_TRNS
			KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_P0 KC_P0 KC_P0
		]
		raise: [
			KC_NO KC_ACL0 KC_ACL1 KC_ACL2 KC_NO QK_MAKE KC_NO KC_NO RGB_MOD RGB_RMOD RGB_HUI KC_NO
			KC_NO KC_BTN2 KC_NO KC_MS_U KC_NO KC_NO KC_NO KC_BTN1 KC_UP KC_BTN2 KC_NO KC_NO
			CW_TOGG KC_BTN1 KC_MS_L KC_MS_D KC_MS_R KC_NO KC_NO KC_LEFT KC_DOWN KC_RGHT KC_NO KC_NO
			KC_TRNS KC_BTN3 KC_NO KC_NO KC_NO KC_NO KC_TRNS KC_TRNS KC_NO KC_NO KC_NO KC_NO KC_NO KC_TRNS
			KC_BTN2 KC_BTN3 KC_BTN1 KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS
		]
		legacy: [
			KC_TILDE KC_EXCLAIM KC_AT KC_HASH KC_DOLLAR KC_PERCENT KC_CIRCUMFLEX KC_AMPERSAND KC_ASTERISK KC_LEFT_PAREN KC_RIGHT_PAREN KC_PIPE
			KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_LEFT_CURLY_BRACE KC_RIGHT_CURLY_BRACE KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS
			KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_LEFT_BRACKET KC_RIGHT_BRACKET KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS
			KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_PIPE KC_TRNS KC_TRNS KC_EQUAL KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS
			KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS KC_TRNS
		]
	}
}
